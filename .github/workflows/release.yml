name: release

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  vars:
    name: Gather Variables

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    outputs:
      mod_name: ${{ steps.mod_name.outputs.value }}
      mod_version: ${{ steps.mod_version.outputs.value }}
      minecraft_version: ${{ steps.minecraft_version.outputs.value }}
      forge_version: ${{ steps.forge_version.outputs.value }}
      tag_current: ${{ steps.tag_current.outputs.tag }}
      tag_previous: ${{ steps.tag_previous.outputs.tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Unshallow Repository
        run: git fetch --prune --unshallow

      - name: Mod Name
        id: mod_name
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'mod_name'

      - name: Mod Version
        id: mod_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'mod_version'

      - name: Minecraft Version
        id: minecraft_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'minecraft_version'

      - name: Forge Version
        id: forge_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'forge_version'

      - name: Find Current Tag
        id: tag_current
        uses: jimschubert/query-tag-action@v1
        with:
          include: 'v*'
          commit-ish: '@'
          skip-unshallow: 'true'

      - name: Find Previous Tag
        id: tag_previous
        uses: jimschubert/query-tag-action@v1
        with:
          include: 'v*'
          exclude: ${{ steps.tag_current.outputs.tag }}
          skip-unshallow: 'true'

      - name: View Variables
        run: |
          echo "'mod_name': => '${{ steps.mod_name.outputs.value }}'"
          echo "'mod_version': => '${{ steps.mod_version.outputs.value }}'"
          echo "'minecraft_version': => '${{ steps.minecraft_version.outputs.value }}'"
          echo "'forge_version': => '${{ steps.forge_version.outputs.value }}'"
          echo "'tag_current': => '${{ steps.tag_current.outputs.tag }}'"
          echo "'tag_previous': => '${{ steps.tag_previous.outputs.tag }}'"

  changelog:
    name: Generate Changelog (tags)

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    needs: [ vars ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Unshallow Repository
        run: git fetch --prune --unshallow

      - name: Generate changelog
        uses: jimschubert/beast-changelog-action@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          CONFIG_LOCATION: .github/changelog.json
          FROM: ${{ needs.vars.outputs.tag_previous }}
          TO: ${{ needs.vars.outputs.tag_current }}
          OUTPUT: .github/CHANGELOG.md

      - name: Read CHANGELOG file
        run: echo "::set-output name=changelog::$(cat .github/CHANGELOG.md)"

      - name: Add Artifact
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: .github/CHANGELOG.md

  view_changelog:
    name: View Changelog Output

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    needs: [ changelog ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Download Changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: .github

      - run: cat .github/CHANGELOG.md

  compile:
    name: Compile Jars

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17 ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install JQ
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: sudo apt-get install jq -y

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Give Gradle Execute Permissions
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: chmod +x ./gradlew

      - name: Give RenderTypes script Execute Permissions
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: chmod +x ./render_types.sh

      - name: Generate Mod Data & Asset Files
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: data
          execution-only-caches: true
          job-id: java-${{ matrix.java }}
          gradle-version: wrapper
          save-generated-gradle-jars: true
          save-local-build-cache: true
          save-gradle-dependencies-cache: true
          save-maven-dependencies-cache: true
          gradle-distribution-sha-256-sum-warning: false

          gradle-dependencies-cache-key: |
            ~/.gradle/caches/forge_gradle/
            ~/.gradle/caches/parchmentgradle/
            accesstransformer.cfg

      - name: Process model files (RenderTypes)
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: ./render_types.sh

      - name: Build Mod JARs
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: build
          execution-only-caches: false
          job-id: java-${{ matrix.java }}
          gradle-version: wrapper
          save-generated-gradle-jars: true
          save-local-build-cache: true
          save-gradle-dependencies-cache: true
          save-maven-dependencies-cache: true
          gradle-distribution-sha-256-sum-warning: false
          gradle-dependencies-cache-key: |
            ~/.gradle/caches/forge_gradle/
            ~/.gradle/caches/parchmentgradle/
            accesstransformer.cfg

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Upload Artifacts to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: jars
          path: ./build/libs

  publish:
    name: Publish Mod

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 17 ]

    runs-on: ${{ matrix.os }}
    needs: [ vars, changelog, compile ]

    steps:
      - name: Install JQ
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: sudo apt-get install jq -y

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: .github

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Give Gradle Execute Permissions
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: chmod +x ./gradlew

      - name: Give RenderTypes script Execute Permissions
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: chmod +x ./render_types.sh

      - name: Generate Mod Data & Asset Files
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: data
          execution-only-caches: true
          job-id: java-${{ matrix.java }}
          gradle-version: wrapper
          save-generated-gradle-jars: true
          save-local-build-cache: true
          save-gradle-dependencies-cache: true
          save-maven-dependencies-cache: true
          gradle-distribution-sha-256-sum-warning: false
          gradle-dependencies-cache-key: |
            ~/.gradle/caches/forge_gradle/
            ~/.gradle/caches/parchmentgradle/
            accesstransformer.cfg

      - name: Process model files (RenderTypes)
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('./render_types.sh') != '' }}
        run: ./render_types.sh

      - name: Publish to CurseForge, Modrinth & Maven
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: publish
          execution-only-caches: false
          job-id: java-${{ matrix.java }}
          gradle-version: wrapper
          save-generated-gradle-jars: true
          save-local-build-cache: true
          save-gradle-dependencies-cache: true
          save-maven-dependencies-cache: true
          gradle-distribution-sha-256-sum-warning: false
          gradle-dependencies-cache-key: |
            ~/.gradle/caches/forge_gradle/
            ~/.gradle/caches/parchmentgradle/
            accesstransformer.cfg
        env:
          APEX_MODS_MAVEN_USERNAME: ${{ secrets.APEX_MODS_MAVEN_USERNAME }}
          APEX_MODS_MAVEN_PASSWORD: ${{ secrets.APEX_MODS_MAVEN_PASSWORD }}

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Load Changelog File
        id: changelog
        run: echo ::set-output name=changelog::$(cat .github/CHANGELOG.md)

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.vars.outputs.tag_current }}
          body_path: .github/CHANGELOG.md
          draft: false
          prerelease: false
          name: '${{ needs.vars.outputs.mod_name }} - ${{ needs.vars.outputs.mod_version }} (${{ needs.vars.outputs.minecraft_version }}-${{ needs.vars.outputs.forge_version }})'
          token: ${{ github.token }}
          files: |
            ./build/libs/*.jar

  notify:
    name: Dispatch new release notifications

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    needs: [ vars, changelog, compile, publish ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Download Changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: .github

      - name: Send Version Release Announcement Messages
        uses: appleboy/discord-action@0.0.3
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: '#3c40c7'
          avatar_url: 'https://i.imgur.com/NkQg4yO.png'
          username: 'ApexStudios'
          file: ./.github/CHANGELOG.md
          message: "${{ needs.vars.outputs.mod_name }} has been updated to v**_${{ needs.vars.outputs.mod_version }}_** for **Minecraft** **_${{ needs.vars.outputs.minecraft_version }}_**!\nCompiled for **MinecraftForge** **_${{ needs.vars.outputs.forge_version }}_** (_or newer_)!"