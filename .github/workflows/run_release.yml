name: Release Mod

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
    # Gather variables used throughout the workflow
  vars:
    name: Gather workflow variables
    runs-on: ubuntu-latest

    outputs:
      mod_name: ${{ steps.mod_name.outputs.value }}
      mod_version: ${{ steps.mod_version.outputs.value }}
      mod_curseforge_id: ${{ steps.mod_curseforge_id.outputs.value }}
      mod_modrinth_id: ${{ steps.mod_modrinth_id.outputs.value }}
      mod_release_type: ${{ steps.mod_release_type.outputs.value }}
      minecraft_version: ${{ steps.minecraft_version.outputs.value }}
      forge_version: ${{ steps.forge_version.outputs.value }}
      tag_current: ${{ steps.tag_current.outputs.tag }}
      tag_previous: ${{ steps.tag_previous.outputs.tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.1.0

      - name: Unshallow Repository
        run: git fetch --prune --unshallow

      - name: Gradle Properties
        id: gradle
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: ./gradle.properties
          properties: mod_name mod_version mod_curseforge_id mod_modrinth_id mod_release_type minecraft_version forge_version

      - name: Find Current Tag
        id: tag_current
        uses: jimschubert/query-tag-action@v2
        with:
          include: v*
          commit-ish: '@'
          skip-unshallow: true

      - name: Find Previous Tag
        id: tag_previous
        uses: jimschubert/query-tag-action@v2
        with:
          include: v*
          exclude: ${{ steps.tag_current.outputs.tag }}
          skip-unshallow: true

      - name: View Variables
        run: |
          echo "'mod_name': => '${{ steps.gradle.outputs.mod_name }}'"
          echo "'mod_version': => '${{ steps.gradle.outputs.mod_version }}'"
          echo "'mod_curseforge_id': => '${{ steps.gradle.outputs.mod_curseforge_id }}'"
          echo "'mod_modrinth_id': => '${{ steps.gradle.outputs.mod_modrinth_id }}'"
          echo "'mod_release_type': => '${{ steps.gradle.outputs.mod_release_type }}'"
          echo "'minecraft_version': => '${{ steps.gradle.outputs.minecraft_version }}'"
          echo "'forge_version': => '${{ steps.gradle.outputs.forge_version }}'"
          echo "'tag_current': => '${{ steps.tag_current.outputs.tag }}'"
          echo "'tag_previous': => '${{ steps.tag_previous.outputs.tag }}'"

  # Generate changelog
  changelog:
    name: Generate Changelog
    uses: ApexStudios-Dev/.github/.github/workflows/call_changelog.yml@master
    needs: [ vars ]
    with:
      tag_current: ${{ needs.vars.outputs.tag_current }}
      tag_previous: ${{ needs.vars.outputs.tag_previous }}

  # Publish jars to various sources
  compile:
    name: Compile Project
    uses: ApexStudios-Dev/.github/.github/workflows/call_compile.yml@master
    needs: [ vars, changelog ]
    secrets:
      APEX_MODS_MAVEN_USERNAME: ${{ secrets.APEX_MODS_MAVEN_USERNAME }}
      APEX_MODS_MAVEN_PASSWORD: ${{ secrets.APEX_MODS_MAVEN_PASSWORD }}

  # Publish jars to various sources
  publish:
    name: Publish Project
    uses: ApexStudios-Dev/.github/.github/workflows/call_publish_generic.yml@master
    needs: [ vars, compile, changelog ]
    secrets:
      MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
    with:
      mod_name: ${{ needs.vars.outputs.mod_name }}
      mod_version: ${{ needs.vars.outputs.mod_version }}
      mod_curseforge_id: ${{ needs.vars.outputs.mod_curseforge_id }}
      mod_modrinth_id: ${{ needs.vars.outputs.mod_modrinth_id }}
      mod_release_type: ${{ needs.vars.outputs.mod_release_type }}
      minecraft_version: ${{ needs.vars.outputs.minecraft_version }}
      tag_current: ${{ needs.vars.outputs.tag_current }}

  # Dispatch mod publish notifications
  notify:
    name: Dispatch Notifications
    runs-on: ubuntu-latest
    needs: [ vars, changelog, publish ]
    if: always()

    steps:
      - name: Download Changelog
        if: ${{ (needs.publish.result == 'success') }}
        uses: actions/download-artifact@v3
        with:
          name: changelog
          path: .github

      - name: Notify Mod Publish Failure
        if: ${{ (needs.publish.result == 'failure') }}
        uses: sarisia/actions-status-discord@v1.9.0
        with:
          webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
          title: '❌️ - **${{ needs.vars.outputs.mod_name }}** - _Failed to publish mod_!'
          color: 0x3C40C7
          username: ApexStudios
          avatar_url: https://i.imgur.com/NkQg4yO.png
          nodetail: true

      - name: Send Version Release Announcement Messages
        if: ${{ (needs.publish.result == 'success') }}
        uses: sarisia/actions-status-discord@v1.9.0
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: '**${{ needs.vars.outputs.mod_name }}** has been updated to v**_${{ needs.vars.outputs.mod_version }}_**'
          description: 'Compiled for **Minecraft** **_${{ needs.vars.outputs.minecraft_version }}_** and **MinecraftForge** **_${{ needs.vars.outputs.forge_version }}_** (_or newer_)'
          color: 0x3C40C7
          username: ApexStudios
          avatar_url: https://i.imgur.com/NkQg4yO.png
          nodetail: true

      - name: Send Changelog to Discord
        if: ${{ (needs.publish.result == 'success') }}
        uses: sinshutu/upload-to-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: ./.github/CHANGELOG.md

      - name: Send Version Release Announcement Tweet
        if: ${{ (needs.publish.result == 'success') }}
        uses: ethomson/send-tweet-action@v1
        with:
          status: "${{ needs.vars.outputs.mod_name }} has been updated to v${{ needs.vars.outputs.mod_version }} for MinecraftForge ${{ needs.vars.outputs.minecraft_version }}-${{ needs.vars.outputs.forge_version }} (_or newer_)!"
          consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

      - name: Notify CI Test Success
        if: ${{ (needs.publish.result == 'success') }}
        uses: sarisia/actions-status-discord@v1.9.0
        with:
          webhook: ${{ secrets.DISCORD_CI_WEBHOOK }}
          title: '✅️ - **${{ needs.vars.outputs.mod_name }}** - _Published successfully_!'
          color: 0x3C40C7
          username: ApexStudios
          avatar_url: https://i.imgur.com/NkQg4yO.png
